name: CICD_pipeline
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest

    env:
      SDK_VERSION: 33
      JDK_VERSION: 17
      ANDROID_HOME: /usr/local/android-sdk

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
            distribution: 'adopt'
            java-version: ${{ env.JDK_VERSION }}

#      - name: Cache Gradle packages
#        uses: actions/cache@v2
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#            restore-keys: ${{ runner.os }}-gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
            api-level: ${{ env.SDK_VERSION }}
            cache: yes

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run Lint
        run: ./gradlew lintDebug

      - name: Upload lint html test report
        uses: actions/upload-artifact@v2
        with:
          name: lint.html
          path: app/build/reports/lint-results-debug.html

  unit-test:
    needs: [lint]
    runs-on: ubuntu-latest

    env:
      SDK_VERSION: 33
      JDK_VERSION: 17
      ANDROID_HOME: /usr/local/android-sdk

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ env.JDK_VERSION }}

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: ${{ env.SDK_VERSION }}
          cache: yes

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run unit tests
        run: ./gradlew test

      - name: Upload unit test report
        uses: actions/upload-artifact@v2
        with:
          name: unit_test_report
          path: app/build/reports/tests/testDebugUnitTest/


  instrumentation-test:
    needs: [ unit-test ]
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Start emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          script: ./gradlew connectedAndroidTest
          disable-animations: true
          emulator-options: -no-boot-anim -no-window
          working-directory: ${{ github.workspace }}
          adb-install-timeout-minutes: 8
          boot-timeout-minutes: 8

#      - name: Run UI tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 34
#          target: default
#          arch: x86_64
#          profile: Nexus 6
#          script: ./gradlew connectedCheck

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: UI_test_report
          path: app/build/reports/androidTests/connected/


  build:
    needs: [instrumentation-test]
    name: Generate APK
    runs-on: ubuntu-latest

    env:
      SDK_VERSION: 33
      JDK_VERSION: 17
      ANDROID_HOME: /usr/local/android-sdk

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ env.JDK_VERSION }}

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: ${{ env.SDK_VERSION }}
          cache: yes


      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Setup JDK 17
        uses: actions/setup-java@v1
        with:
          distribution: 'adopt'
          java-version: ${{ env.JDK_VERSION }}


      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: shopping-list.apk
          path: app/build/outputs/apk/debug/app-debug.apk

